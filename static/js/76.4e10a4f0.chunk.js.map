{"version":3,"file":"static/js/76.4e10a4f0.chunk.js","mappings":"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","sources":["components/Api.jsx","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '25e2aa0c0d0f2efeb739a87ae42543b5';\n\nconst baseUrl = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n    const response = await axios.get(`${baseUrl}trending/all/week?api_key=${apiKey}`);\n    return response.data;\n}\n\n//  życie identyfikatora filmu (movieID) w endpointach związanych z konkretnym filmem, takimi jak \n// get - movie - details, get - movie - credits i get - movie - reviews, jest związane z konwencją używaną przez API themoviedb.org.\nexport const getKeyword = async (keyword) => {\n const response = axios.get(`${baseUrl}/search/movie?api_key=${apiKey}&query=${keyword}`);\n  return response.data.results;\n};\nexport const getDetails = async (movieId) => {\n const response = await axios.get(`${baseUrl}/movie/${movieId}?api_key=${apiKey}`);\nreturn response.data.results;\n};\n\nexport const getCast = async (movieId) => {\n   const response = await axios.get(`${baseUrl}/movie/${movieId}/credits?api_key=${apiKey}`);\n  return response.data.results;  \n}\n\nexport const getReviews = async (movieId) => {\n   const response = axios.get(`${baseUrl}/movie/${movieId}/reviews?api_key=${apiKey}`);\n  return response.data.results;  \n}\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Cast_wrapper__XmIBi\",\"item\":\"Cast_item__a0CDL\",\"image\":\"Cast_image__mOsuM\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from '../Api';\n\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState(null);\n  const { movieId } = useParams();\n\nuseEffect(() => {\n  if (movieId) {\n    getCast(movieId)\n      .then(setMovieCast);\n  }\n}, [movieId]);\n\nif (!movieCast) {\n  return null;\n}\n\n  return (\n    <>\n      <ul className={css.wrapper}>\n        {movieCast.map((actor) => (\n          <li key={actor.id} className={css.item}>\n            <img\n              className={css.image}\n              src={\n                actor.profile_path\n                  ? `https://www.themoviedb.org/t/p/w500/${actor.profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n              }\n              alt={actor.original_name}\n            />\n            <h3>{actor.name}</h3>\n            <p>As: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["apiKey","baseUrl","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","stop","apply","arguments","getDetails","_ref3","_callee3","movieId","_context3","results","_x2","getCast","_ref4","_callee4","_context4","_x3","getReviews","_ref5","_callee5","_context5","_x4","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","useParams","useEffect","then","_jsx","_Fragment","children","className","css","map","actor","_jsxs","src","profile_path","alt","original_name","name","character","id"],"sourceRoot":""}